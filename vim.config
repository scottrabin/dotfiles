" disable compatibility mode
set nocompatible

" required by vundle
filetype off

" Vundle!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let vundle manage vundle
Bundle 'gmarik/vundle'

" Syntax highlighting
" [js] better syntax highlighting for javascript
Bundle 'pangloss/vim-javascript'
" [jade] Jade (expressjs templating language)
Bundle 'digitaltoad/vim-jade.git'
" [rails] Rails-specific syntax highlighting
Bundle 'tpope/vim-rails'
" [stylus] CSS preprocessor
Bundle 'wavded/vim-stylus'
Bundle 'groenewege/vim-less'
Bundle 'cakebaker/scss-syntax.vim'
" [html] remove irritating underlines before/after text in nested <a> tags
"Bundle 'tudorprodan/html_annoyance.vim'

" fuzzy file finder
Bundle 'kien/ctrlp.vim'
" holy crap what would I do without this
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'

" color scheme
Bundle 'altercation/vim-colors-solarized'

" turn plugin/indent back on
filetype plugin indent on

" enable more colors
set t_Co=256

" Syntax highlighting
syntax on
set background=dark
colorscheme solarized
" set the encoding!
set encoding=utf-8
" backspace over everything
set backspace=indent,eol,start
" show line numbers
set number
" status line
hi User9 ctermfg=LightGray ctermbg=DarkGray
set statusline=%9*\ %y\ (\ %l\ /\ %L\ ):%v\ (%P)\ %F\ %m%=%{fugitive#statusline()}\    
" always show the status line
set laststatus=2

" tabs
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
set noexpandtab

" search & highlight
set incsearch
set hlsearch
set smartcase
set ignorecase

" change backup directory
if isdirectory($HOME . '/.vim/backup') == 0
	:silent !mkdir -p ~/.vim/backup >/dev/null 2>&1
endif
set backupdir=~/.vim/backup//
set backup

" change swap directory
if isdirectory($HOME . '/.vim/swap') == 0
	:silent !mkdir -p ~/.vim/swap >/dev/null 2>&1
endif
set directory=~/.vim/swap//

" viminfo stores the state of your previous editing session
set viminfo+=n~/.vim/viminfo

" change undo directory
if exists("+undofile")
	if isdirectory($HOME . '/.vim/undo') == 0
		:silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
	endif
	set undodir=~/.vim/undo//
	set undofile
endif

" custom whitespace modifications
set list
set listchars=tab:\ \ 
set listchars+=trail:‚çü
" custom functions

let mapleader = ","

" tabs
map <leader>a :tabnew<cr>
map <leader>c :tabclose<cr>
map <leader>r :tabp<cr>
map <leader>s :tabn<cr>

" Ctrl-P
map <leader>t :CtrlP<cr>
" working dir: nearest ancestor dir containing .git/.hg/.svn/.bzr/_darcs
let g:ctrlp_working_path_mode = 2
